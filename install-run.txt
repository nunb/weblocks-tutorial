Weblocks installation + app creation.

1. Download quicklisp, run it with ccl and load weblocks. (this part is simple enough to just do a short screencast).
    Briefly:
    cd; mkdir cl; cd cl; 
    cd /tmp/
    wget http://beta.quicklisp.org/quicklisp.lisp
    rlwrap ccl --load quicklisp.lisp 
   
If this is your first time, QL will prompt you to run (quicklisp-quickstart:install) -- do that. Now  Quicklisp tells us what to do:

   1. To load a system, use: (ql:quickload "system-name")

   2. To find systems, use: (ql:system-apropos "term")

   3. To load Quicklisp every time you start Lisp, use: (ql:add-to-init-file)

   First do step #3. I also did this step: (ql:quickload "quicklisp-slime-helper")

  Then do step #1 (ql:quickload "weblocks") 

  Enjoy the painless download and install.

   
2. run weblocks:
   ? (weblocks::start-weblocks)
   #<WEBLOCKS-ACCEPTOR (host *, port 8080)>
   Go to port 8080 - weblocks is running.

4. At repl run (wop:make-app 'tut "/Users/nandan/programming/cl/tut") 
    You should get a message similar to the following:
    TUT has been created.
    Please add '/Users/Nandan/programming/cl/tut/' to asdf:*central-registry* before you proceed.

5. you can accomplish the latter by evaluating (push #P"/Users/Nandan/programming/cl/tut/" asdf:*central-registry*)

Let's quit lisp and start over. In sbcl use C-d until back at the shell, in ccl type (quit).

Load up again, and load your new project:

 ~/programming/cl  $ rlwrap ccl --load "/Users/Nandan/quicklisp/setup.lisp" 
Welcome to Clozure Common Lisp Version 1.4-r13119  (DarwinX8664)!
? (push #P"/Users/Nandan/programming/cl/tut/" asdf:*central-registry*)
(#P"/Users/Nandan/programming/cl/tut/" #P"/Users/Nandan/quicklisp/quicklisp/" #P"/Users/Nandan/quicklisp/quicklisp/" (DIRECTORY-NAMESTRING *DEFAULT-PATHNAME-DEFAULTS*))
?  (ql:quickload "tut")
... loading messages from quicklisp


Well, in the first step above the --load isn't necessary if you've added quicklisp to your lisp's init file with (ql:add-to-init-file)

Starting over, this is how simple it should be to get your website/webapp up and running:

 ~/programming/cl  $ rlwrap ccl
Welcome to Clozure Common Lisp Version 1.4-r13119  (DarwinX8664)!
? (push #P"/Users/Nandan/programming/cl/tut/" asdf:*central-registry*)
(#P"/Users/Nandan/programming/cl/tut/" #P"/Users/Nandan/quicklisp/quicklisp/" (DIRECTORY-NAMESTRING *DEFAULT-PATHNAME-DEFAULTS*))
?  (ql:quickload "tut")
To load "tut":
  Load 1 ASDF system:
    tut
; Loading "tut"
.......
("tut")
? (weblocks:start-weblocks)

Now weblocks is running on 8080, navigate to http://localhost:8080 and you can start your tut app. So far of course, it does nothing. Let's remedy that next.

One final thing.. if you like to use slime, and I highly recommend you do, run the following commands (this assumes you've used quicklisp-slime-helper above) :
 (ql:quickload "swank")
 (swank:create-server :port 5005 :style :spawn :dont-close t)

For best results put all the commands into a file, say start-tut.lisp

(push #P"/Users/Nandan/programming/cl/tut/" asdf:*central-registry*) 
(ql:quickload "tut")
 (ql:quickload "swank")
 (swank:create-server :port 5005 :style :spawn :dont-close t)

Then each time you want to work on the project you can run

rlwrap ccl --load start-tut.lisp  (or put it inside a .screenrc according to the tutorial here [http://redlinernotes.com/blog/?p=1232]

